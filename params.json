{"name":"Housemd","body":"[中文使用指南](https://github.com/zhongl/HouseMD/wiki/UserGuideCN)\r\n\r\nHouseMD is a interactive command-line tool for dianosing Java process in runtime.\r\nIt's inspiration came from [BTrace](http://kenai.com/projects/btrace), but more easier to use and more safer.\r\n\r\n# Features\r\n\r\n- Display loaded classes information\r\n    - name\r\n    - source file(.class or .jar)\r\n    - classloaders\r\n- Display invocation trace summary\r\n    - method full name and sign\r\n    - class loader of method declaring class\r\n    - total invoked times\r\n    - avg elapse millis\r\n    - self instance\r\n- Output invocation detail\r\n    - timestamp\r\n    - elapse millis\r\n    - call thread\r\n    - this object\r\n    - class name\r\n    - method name\r\n    - arguments\r\n    - result or exception\r\n- Output invocation stack trace\r\n- Auto-completion\r\n- Awesome features you can provide by forking me\r\n\r\n[Test cases](src/test/scala/com/github/zhongl/housemd) would show more specification details.\r\n\r\n# Getting started\r\n\r\n## Pre-requirement\r\n\r\n- JDK 6 +\r\n\r\n## One-command install (On Linux or MacOSX)\r\n\r\n    > curl -Lk https://raw.github.com/zhongl/HouseMD/master/bin/install | bash\r\n\r\n- Windows are not supported yet.\r\n\r\n## Normal install\r\n\r\n- Click [here](https://github.com/zhongl/HouseMD/downloads) download lastest version executable jar\r\n- Run it as:\r\n\r\n    > java -Xbootclasspath/a:$JAVA_HOME/lib/tools.jar -jar housemd-assembly-x.x.x.jar\r\n\r\n> Caution: In Mac OSX, the `-Xbootclasspath` is no needed.\r\n\r\n# How to use\r\n\r\nFirst all, type:\r\n\r\n    > housemd -h\r\n\r\nA help infomation shows up like:\r\n\r\n    Usage: housemd [OPTIONS] pid\r\n    \ta runtime diagnosis tool of JVM.\r\n    Options:\r\n    \t-h, --help\r\n    \t\tshow help infomation of this command.\r\n    \t-p, --port=[INT]\r\n    \t\tset console local socket server port number.\r\n    \t\tdefault: 54321\r\n    Parameters:\r\n    \tpid\r\n    \t\tid of process to be diagnosing.\r\n\r\n\r\nSuppost your target pid is `1234` (you can use `jps` or `ps` get it), and then input:\r\n\r\n    > housemd 1234\r\n\r\nAfter seen prompt `housemd>`, input `help` then you get help infomation like this:\r\n\r\n    housemd> help\r\n\r\n    quit      terminate the process.\r\n    help      display this infomation.\r\n    trace     display or output infomation of method invocaton.\r\n    loaded    display loaded classes information.\r\n\r\nYou can also input `help loaded` and get help infomation of `loaded` as blow:\r\n\r\n    housemd> help loaded\r\n    Usage: loaded [OPTIONS] name\r\n        display loaded classes information.\r\n    Options:\r\n        -h, --classloader-hierarchies\r\n            display classloader hierarchies of loaded class.\r\n    Parameters:\r\n        name\r\n            class name without package name.\r\n\r\n# Trace schemas\r\n\r\n## Summary statistics\r\n\r\n    | method full name         | class loader                            | invoked |  avg elapse|  this object|\r\n    TraceTarget.addOne(int)    sun.misc.Launcher$AppClassLoader@1cde100          2          34ms   null\r\n\r\n\r\n## Detail line\r\n\r\n    | date     | time   | elapse | thread name |     this object      | method full name  | arguemnt(s) |result or exception\r\n    2012-06-13 07:59:33 1ms      [main]        TraceTarget$B@1137d4a4 TraceTarget$B.mC    [123]         void\r\n\r\n- The delimiter is one `white space`,\r\n- method full name contains: package, class name and method name\r\n\r\n\r\nHaving fun!","tagline":"HouseMD is a command-line tool for diagnosing Java process in runtime","google":"UA-6664231-3","note":"Don't delete this file! It's used internally to help with page regeneration."}